{"version":3,"file":"static/js/146.f372ccce.chunk.js","mappings":"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","sources":["helpers/crypto.tsx","constants/routes.tsx","helpers/routes.tsx","routes/login/Index.tsx","routes/auth/note/notes/components/Toolbar.tsx","routes/auth/note/notes/components/ItemComponent.tsx","routes/auth/note/notes/Index.tsx","routes/auth/note/editor/components/Editor.tsx","routes/auth/note/editor/components/Index.tsx","routes/auth/note/editor/components/Toolbar.tsx","routes/auth/note/editor/Index.tsx","routes/auth/note/Index.tsx","routes/auth/Index.tsx","routes/Index.tsx"],"sourcesContent":["import Crypto from 'crypto-browserify';\nimport EnvHelper from '~src/helpers/env';\nimport ConfigConstants from '~src/constants/config';\n\nconst hash = (str: string) => {\n  const hashValue = Crypto.pbkdf2Sync(\n    str,\n    EnvHelper.getValue(ConfigConstants.REACT_APP_SALT),\n    2048,\n    32,\n    'sha512',\n  ).toString('hex');\n  return hashValue;\n};\n\nexport default {\n  hash,\n};\n","const config = {\n  LOGIN: '/login',\n  AUTHENTICATE: {\n    PREFIX: 'users',\n    NOTES: '/notes',\n  },\n  HOME: '/',\n};\nexport default config;\n","import RoutesConstants from '~src/constants/routes';\n\nconst getNotesRoute = () => {\n  return `/${RoutesConstants.AUTHENTICATE.PREFIX}${RoutesConstants.AUTHENTICATE.NOTES}`;\n};\n\nexport default {\n  getNotesRoute,\n};\n","import React from 'react';\nimport { login } from '~src/routes/login/actions/Actions';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport './css/login.scss';\nimport CryptoHelper from '~src/helpers/crypto';\nimport RoutesHelper from '~src/helpers/routes';\n\nconst Index = ({}) => {\n  const dispatch = useDispatch<any>();\n  const navigate = useNavigate();\n  const onSubmit = async (e: any) => {\n    e.preventDefault();\n    const { user_name, password } = document.forms[0];\n    const userNameVal = user_name.value;\n    const passwordVal = password.value;\n    const passwordHash = CryptoHelper.hash(passwordVal);\n    const data = await dispatch(\n      await login({ user_name: userNameVal, password: passwordHash }),\n    );\n    if (data.error) {\n      alert(data.error.message);\n      return;\n    }\n    navigate(RoutesHelper.getNotesRoute());\n  };\n\n  return (\n    <div className=\"login\">\n      <form className=\"form\" onSubmit={onSubmit}>\n        <input\n          className=\"input-user-name\"\n          name={'user_name'}\n          placeholder=\"user name\"\n          required={true}\n        />\n        <input\n          className=\"input-password\"\n          name={'password'}\n          type={'password'}\n          placeholder=\"password\"\n          required={true}\n        />\n        <button type={'submit'}>Login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Index;\n","import React from 'react';\nimport { MdDeleteOutline } from 'react-icons/md';\nimport { IoCreateOutline } from 'react-icons/io5';\nimport {\n  deleteNote,\n  createNote,\n} from '~src/routes/auth/note/notes/actions/Actions';\nimport { NOTE_DEFAULT } from '~src/routes/auth/note/notes/actions/Reducer';\nimport { RootStateType } from '~src/RootReducer';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst Index = () => {\n  const dispatch = useDispatch<any>();\n  const notes = useSelector((state: RootStateType) => state.notesReducer.notes);\n  const currentNoteId = useSelector(\n    (state: RootStateType) => state.notesReducer.currentNote?._id,\n  );\n\n  const onClickDelete = () => {\n    dispatch(deleteNote(currentNoteId));\n  };\n\n  const onClickCreate = () => {\n    const data = NOTE_DEFAULT;\n    dispatch(createNote(data));\n  };\n\n  const clsEmpty = notes.length === 0 ? 'notes-delete-empty' : '';\n\n  return (\n    <div className=\"notes-toolbar-container\">\n      <MdDeleteOutline\n        onClick={onClickDelete}\n        className={`notes-cursor ${clsEmpty}`}\n        aria-disabled={true}\n      />\n      <IoCreateOutline onClick={onClickCreate} className=\"notes-cursor\" />\n    </div>\n  );\n};\nexport default Index;\n","import React, { useCallback } from 'react';\nimport { NoteType } from '../actions/ActionTypes';\nimport { useDispatch } from 'react-redux';\nimport { selectNote } from '../actions/Actions';\nimport { useSelector } from 'react-redux';\nimport { RootStateType } from '~src/RootReducer';\n\ntype ItemType = {\n  item: NoteType;\n};\n\nconst ItemComponent = ({ item }: ItemType) => {\n  const dispatch = useDispatch();\n  const currentNote = useSelector(\n    (state: RootStateType) => state.notesReducer.currentNote,\n  );\n\n  const { text, created_at, title, _id, updated_at: updatedAt } = item;\n\n  const onClickItem = useCallback(() => {\n    dispatch(selectNote(item));\n  }, [_id, updatedAt]);\n\n  const formatStr = (str) => {\n    const maxLength = 25;\n    if (str.length > maxLength) {\n      return `${str.substring(0, maxLength)}...`;\n    }\n    return str;\n  };\n  const clsActive = currentNote?._id === _id ? 'active' : '';\n  return (\n    <div\n      className={`notes-items notes-cursor ${clsActive}`}\n      onClick={onClickItem}\n    >\n      <h4 className=\"notes-margin-0 notes-ff\">{formatStr(title)}</h4>\n      <div className=\"notes-body\">\n        <span className=\"notes-margin-0\">{created_at}</span>\n        <span className=\"notes-margin-0 notes-ml-10 notes-cl-gray\">\n          {formatStr(text)}\n        </span>\n      </div>\n    </div>\n  );\n};\nexport default ItemComponent;\n","import React, { useEffect } from 'react';\nimport './css/NoteStyles.scss';\nimport Toolbar from './components/Toolbar';\nimport ItemComponent from './components/ItemComponent';\nimport { useSelector } from 'react-redux';\nimport { RootStateType } from '~src/RootReducer';\nimport { getNotes } from '~src/routes/auth/note/notes/actions/Actions';\nimport { useDispatch } from 'react-redux';\n\nconst Index = ({}) => {\n  const dispatch = useDispatch<any>();\n  useEffect(() => {\n    dispatch(getNotes());\n  }, []);\n  const notes = useSelector((state: RootStateType) => state.notesReducer.notes);\n\n  return (\n    <div className=\"notes-wrapper\">\n      <div className=\"\">\n        <Toolbar />\n      </div>\n      <div className=\"notes-container\">\n        <div>\n          {notes.map((item) => (\n            <ItemComponent key={item._id} item={item} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Index;\n","import React, { useCallback } from 'react';\nimport { EditorState, RichUtils } from 'draft-js';\nimport Editor from '@draft-js-plugins/editor';\nimport 'draft-js/dist/Draft.css';\nimport '@draft-js-plugins/image/lib/plugin.css';\nimport createImagePlugin from '@draft-js-plugins/image';\n\ntype IndexType = {\n  id: string;\n  editorState: EditorState;\n  onChange: (editState: EditorState) => void;\n};\nconst imagePlugin = createImagePlugin();\nconst HEADING = 'header-one';\nconst Index = ({ id, editorState, onChange }: IndexType) => {\n  const onChangeEditor = useCallback(\n    (newState: EditorState) => {\n      if (\n        newState.getCurrentContent().equals(editorState.getCurrentContent())\n      ) {\n        return;\n      }\n      onChange(forceFirstLine(newState));\n    },\n    [id],\n  );\n\n  const forceFirstLine = (editState: EditorState) => {\n    const currentContent = editState.getCurrentContent();\n    const firstBlockKey = currentContent.getBlockMap().first().getKey();\n    const currentBlockKey = editState.getSelection().getAnchorKey();\n    const isFirstBlock = currentBlockKey === firstBlockKey;\n    const currentBlockType = RichUtils.getCurrentBlockType(editState);\n    const isHeading = currentBlockType === HEADING;\n    if (isFirstBlock !== isHeading) {\n      return RichUtils.toggleBlockType(editState, HEADING);\n    }\n    return editState;\n  };\n\n  return (\n    <Editor\n      editorState={editorState}\n      onChange={onChangeEditor}\n      plugins={[imagePlugin]}\n    />\n  );\n};\n\nexport default Index;\n","import React, { useEffect } from 'react';\nimport { EditorState, convertToRaw, convertFromRaw } from 'draft-js';\nimport Editor from '~src/routes/auth/note/editor/components/Editor';\n\nimport { useDispatch } from 'react-redux';\nimport debounce from 'lodash.debounce';\nimport { updateNote } from '~src/routes/auth/note/notes/actions/Actions';\nimport { NOTE_DEFAULT } from '~src/routes/auth/note/notes/actions/Reducer';\nimport { NoteType } from 'src/routes/auth/note/notes/actions/ActionTypes';\n\ntype IndexType = {\n  editorState: EditorState;\n  currentNote: NoteType;\n  onChangeEditor: (editState: EditorState) => void;\n};\n\nconst Index = ({ editorState, currentNote, onChangeEditor }: IndexType) => {\n  const _id = currentNote._id;\n  const dispatch = useDispatch<any>();\n\n  useEffect(() => {\n    if (!currentNote.content) {\n      onChangeEditor(EditorState.createEmpty());\n      return;\n    }\n    const content = EditorState.createWithContent(\n      convertFromRaw(JSON.parse(currentNote.content)),\n    );\n    onChangeEditor(content);\n  }, [_id]);\n\n  const onChange = (editState: EditorState) => {\n    apiCreateNote(editState);\n    onChangeEditor(editState);\n  };\n\n  const apiCreateNote = debounce((editState: EditorState) => {\n    const data = getDataOfCreateNote(editState);\n    dispatch(updateNote(data));\n  }, 100);\n\n  const getDataOfCreateNote = (editState: EditorState) => {\n    const currentContent = convertToRaw(editState.getCurrentContent());\n    if (!currentContent || currentContent.blocks.length === 0) {\n      return null;\n    }\n    const title = currentContent.blocks[0].text || NOTE_DEFAULT.title;\n    const text = currentContent.blocks[1]?.text || NOTE_DEFAULT.text;\n    return {\n      title,\n      text,\n      content: JSON.stringify(currentContent),\n      _id,\n    };\n  };\n\n  return (\n    <>\n      <label className=\"editor-lbl-created-at\">{currentNote?.updated_at}</label>\n      <div className=\"editor-wrap-draftjs\">\n        <Editor id={_id} editorState={editorState} onChange={onChange} />\n      </div>\n    </>\n  );\n};\n\nexport default Index;\n","import React from 'react';\nimport { BsImage } from 'react-icons/bs';\nimport { EditorState, AtomicBlockUtils } from 'draft-js';\n\ntype IndexType = {\n  onChangeEditor: (editState: EditorState) => void;\n  editorState: EditorState;\n};\nconst Index = ({ editorState, onChangeEditor }: IndexType) => {\n  const onChangeImage = (e) => {\n    getImage(e, (result) => {\n      const newEditorState = insertImage(editorState, result);\n      onChangeEditor(newEditorState);\n    });\n  };\n\n  const getImage = (e, cb) => {\n    e.stopPropagation();\n    e.preventDefault();\n    if (e.target.files.length === 0) {\n      return;\n    }\n    const file = e.target.files[0];\n    getBase64(file, (result) => {\n      cb(result);\n    });\n  };\n\n  const getBase64 = async (file, cb) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      cb(reader.result);\n    };\n    reader.onerror = (error) => {\n      return error;\n    };\n  };\n\n  const insertImage = (editState, base64) => {\n    const contentState = editState.getCurrentContent();\n    const contentStateWithEntity = contentState.createEntity(\n      'image',\n      'IMMUTABLE',\n      { src: base64 },\n    );\n    const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n    const newEditorState = EditorState.set(editState, {\n      currentContent: contentStateWithEntity,\n    });\n    return AtomicBlockUtils.insertAtomicBlock(newEditorState, entityKey, ' ');\n  };\n\n  return (\n    <div className=\"editor-toolbar-container\">\n      <label htmlFor=\"file\">\n        <BsImage className=\"editor-cursor\" />\n      </label>\n      <input\n        onChange={onChangeImage}\n        type=\"file\"\n        id=\"file\"\n        style={{ display: 'none' }}\n      />\n    </div>\n  );\n};\nexport default Index;\n","import React, { useState } from 'react';\nimport { EditorState } from 'draft-js';\nimport Editor from '~src/routes/auth/note/editor/components/Index';\nimport './css/EditorStyles.scss';\nimport Toolbar from './components/Toolbar';\nimport { useSelector } from 'react-redux';\nimport { RootStateType } from '~src/RootReducer';\n\nconst SimpleImageEditor = ({}) => {\n  const currentNote = useSelector(\n    (state: RootStateType) => state.notesReducer.currentNote,\n  );\n\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty(),\n  );\n\n  const onChangeEditor = (editState: EditorState) => {\n    setEditorState(editState);\n  };\n\n  return (\n    <div className=\"editor-container\">\n      <div>\n        <Toolbar onChangeEditor={onChangeEditor} editorState={editorState} />\n      </div>\n      {currentNote && currentNote._id && (\n        <Editor\n          currentNote={currentNote}\n          onChangeEditor={onChangeEditor}\n          editorState={editorState}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default SimpleImageEditor;\n","import React from 'react';\nimport './css/note.scss';\nimport Notes from '~src/routes/auth/note/notes/Index';\nimport Editor from '~src/routes/auth/note/editor/Index';\n\nconst Index = () => {\n  return (\n    <>\n      <div className=\"app-wrap-note\">\n        <Notes />\n      </div>\n      <div className=\"app-wrap-editor\">\n        <Editor />\n      </div>\n    </>\n  );\n};\n\nexport default Index;\n","import React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport Note from '~src/routes/auth/note/Index';\nimport RoutesConstants from '~src/constants/routes';\n\nconst Index = () => {\n  return (\n    <Routes>\n      <Route path={RoutesConstants.AUTHENTICATE.NOTES} element={<Note />} />\n    </Routes>\n  );\n};\n\nexport default Index;\n","import React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport Login from '~src/routes/login/Index';\nimport RoutesConstants from '~src/constants/routes';\nimport AuthRoutes from '~src/routes/auth/Index';\n\nfunction Index() {\n  return (\n    <Routes>\n      <Route\n        path={`${RoutesConstants.AUTHENTICATE.PREFIX}/*`}\n        element={<AuthRoutes />}\n      />\n      <Route path={RoutesConstants.LOGIN} element={<Login />} />\n      <Route path={RoutesConstants.HOME} element={<Login />} />\n    </Routes>\n  );\n}\n\nexport default Index;\n"],"names":["str","Crypto","EnvHelper","ConfigConstants","toString","LOGIN","AUTHENTICATE","PREFIX","NOTES","HOME","RoutesConstants","dispatch","useDispatch","navigate","useNavigate","onSubmit","e","preventDefault","document","forms","user_name","password","userNameVal","value","passwordVal","passwordHash","CryptoHelper","login","data","error","alert","message","RoutesHelper","className","name","placeholder","required","type","notes","useSelector","state","notesReducer","currentNoteId","currentNote","_id","clsEmpty","length","onClick","deleteNote","NOTE_DEFAULT","createNote","item","text","created_at","title","updatedAt","updated_at","onClickItem","useCallback","selectNote","formatStr","substring","clsActive","useEffect","getNotes","Toolbar","map","imagePlugin","createImagePlugin","HEADING","id","editorState","onChange","onChangeEditor","newState","getCurrentContent","equals","forceFirstLine","editState","firstBlockKey","getBlockMap","first","getKey","getSelection","getAnchorKey","RichUtils","plugins","content","EditorState","convertFromRaw","JSON","parse","apiCreateNote","debounce","getDataOfCreateNote","updateNote","currentContent","convertToRaw","blocks","stringify","Editor","getImage","cb","stopPropagation","target","files","file","getBase64","result","reader","FileReader","readAsDataURL","onload","onerror","insertImage","base64","contentStateWithEntity","createEntity","src","entityKey","getLastCreatedEntityKey","newEditorState","AtomicBlockUtils","htmlFor","style","display","useState","setEditorState","path","element"],"sourceRoot":""}